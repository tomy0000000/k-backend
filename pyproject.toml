[project]
name = "k-backend"
version = "0.8.1"
description = "The backend API server of K"
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.12,<4.0.0"
authors = [{ name = "Tomy Hsieh", email = "pypi@tomy.me" }]
dependencies = [
    "fastapi (>=0.115,<0.116)",
    "sqlalchemy (>=2.0.37,<3.0.0)",
    "pydantic (>=2.0,<3.0)",
    "sqlmodel (>=0.0.22,<0.0.23)",
    "uvicorn[standard] (>=0.18.2,<0.19.0)",
    "psycopg2 (>=2.9.3,<3.0.0)",
    "alembic (>=1.8.1,<2.0.0)",
    "python-jose[cryptography] (>=3.3.0,<4.0.0)",
    "python-multipart (>=0.0.5,<0.0.6)",
    "loguru (>=0.6.0,<0.7.0)",
    "tzdata (>=2022.4,<2023.0)",
    "simplejson (>=3.17.6,<4.0.0)",
    "pydantic-settings (>=2.7.1,<3.0.0)",
    "pydantic-extra-types (>=2.10.2,<3.0.0)",
]

[project.urls]
repository = "https://github.com/tomy0000000/k-backend"
documentation = "https://github.com/tomy0000000/k-backend/wiki"

[tool.poetry]
package-mode = false

[tool.poetry.group.dev.dependencies]
ipython = "^8.5.0"
mypy = ">=1.14.1,<1.15.0"
pytest = "^8.3.4"
httpx = "^0.28.1"
factory-boy = "^3.3.1"
pre-commit = "^4.1.0"
ruff = "^0.9.2"
types-simplejson = "^3.19.0.20241221"
types-python-jose = "^3.3.4.20240106"
pytest-cov = "^6.0.0"

[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files.html
profile = "black"
src_paths = ["k_backend"]

[tool.pytest.ini_options]
# https://docs.pytest.org/en/stable/reference/customize.html#configuration-file-formats
addopts = "--capture=no --cov=k_backend --cov-report=term-missing --cov-report=xml --cov-report=html"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/config_file.html
strict = true
exclude = ["venv", ".venv", "alembic", "k_backend/tests"]

[[tool.mypy.overrides]]
# TODO: Remove this when factory boy supports typing
module = ["factory.*"]
ignore_missing_imports = true

[tool.ruff]
# https://docs.astral.sh/ruff/settings/
target-version = "py312" # Python 3.12
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "B008", # do not perform function calls in argument defaults
]
